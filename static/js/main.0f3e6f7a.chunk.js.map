{"version":3,"sources":["utilities.js","App.js","usePlatform.js","index.js"],"names":["drawRect","detections","ctx","forEach","prediction","x","y","width","height","text","color","Math","floor","random","toString","strokeStyle","font","beginPath","fillStyle","fillText","rect","stroke","App","webcamRef","useRef","canvasRef","isMobile","useState","setIsMobile","window","innerWidth","useEffect","usePlatform","isLoading","setIsLoading","runCoco","a","cocossd","net","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","getContext","then","res","videoConstraints","facingMode","exact","mobileStyle","position","marginLeft","marginRight","left","right","textAlign","zindex","cameraStyle","className","ariaLabel","radius","wrapperStyle","wrapperClass","visible","ref","muted","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qZAAaA,G,OAAW,SAACC,EAAYC,GAEnCD,EAAWE,SAAQ,SAAAC,GAAc,kBAGDA,EAAU,KAHT,GAGxBC,EAHwB,KAGrBC,EAHqB,KAGlBC,EAHkB,KAGXC,EAHW,KAIzBC,EAAOL,EAAU,MAGjBM,EAAQC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,IAC1DZ,EAAIa,YAAc,IAAML,EACxBR,EAAIc,KAAO,aAGXd,EAAIe,YACJf,EAAIgB,UAAY,IAAMR,EACtBR,EAAIiB,SAASV,EAAMJ,EAAGC,GACtBJ,EAAIkB,KAAKf,EAAGC,EAAGC,EAAOC,GACtBN,EAAImB,c,SC6GOC,MApHf,WACE,IAAMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MACjBE,ECZiB,WAAO,IAAD,EACCC,oBAAS,GADV,mBACxBD,EADwB,KACdE,EADc,KAEzBrB,EAAQsB,OAAOC,WAUrB,OARAC,qBAAU,WAENH,EADErB,EAAQ,QAKX,CAACA,IAEG,CAAEmB,YDAYM,GAAbN,SAHK,EAIqBC,oBAAS,GAJ9B,mBAINM,EAJM,KAIKC,EAJL,KAOPC,EAAO,uCAAG,4BAAAC,EAAA,sEACIC,SADJ,cACRC,EADQ,OAEdC,QAAQC,IAAI,0BAEZC,aAAY,WACVC,EAAOJ,KACN,IANW,mBAQP,GARO,2CAAH,qDAWPI,EAAM,uCAAG,WAAOJ,GAAP,uBAAAF,EAAA,yDAGkB,qBAAtBb,EAAUoB,SACK,OAAtBpB,EAAUoB,SAC6B,IAAvCpB,EAAUoB,QAAQC,MAAMC,WALb,wBAQLD,EAAQrB,EAAUoB,QAAQC,MAC1BE,EAAavB,EAAUoB,QAAQC,MAAME,WACrCC,EAAcxB,EAAUoB,QAAQC,MAAMG,YAG5CxB,EAAUoB,QAAQC,MAAMrC,MAAQuC,EAChCvB,EAAUoB,QAAQC,MAAMpC,OAASuC,EAGjCtB,EAAUkB,QAAQpC,MAAQuC,EAC1BrB,EAAUkB,QAAQnC,OAASuC,EAlBhB,UAqBOT,EAAII,OAAOE,GArBlB,QAqBLI,EArBK,OAwBL9C,EAAMuB,EAAUkB,QAAQM,WAAW,MACzCjD,EAASgD,EAAK9C,GAzBH,4CAAH,sDA6BZ6B,qBAAU,WACRI,IAAUe,MAAK,SAACC,GAAD,OAASjB,GAAciB,QAGrC,IAEH,IAAMC,EAAmB1B,EACrB,CACE2B,WAAY,CAAEC,MAAO,gBAEvB,CACED,WAAY,QAeZE,EAAc,CAClBC,SAAU,WACVC,WAAY,EACZC,YAAa,EACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRvD,MAAOsB,OAAOC,WACdtB,OAAQ,KAGJuD,EAAcrC,EAAW6B,EAxBd,CACfC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRvD,MAAO,IACPC,OAAQ,KAiBV,OACE,yBAAKwD,UAAU,OACb,4BAAQA,UAAU,cACf/B,EACC,kBAAC,IAAD,CACEzB,OAAO,KACPD,MAAM,KACNG,MAAM,QACNuD,UAAU,oBACVC,OAAO,IACPC,aAAc,GACdC,aAAa,GACbC,SAAS,IAGX,kBAAC,IAAD,CACEC,IAAK/C,EACLgD,OAAO,EACPnB,iBAAkBA,EAClBoB,MAAOT,IAIX,4BAAQO,IAAK7C,EAAW+C,MAAOT,OEpHvCU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0f3e6f7a.chunk.js","sourcesContent":["export const drawRect = (detections, ctx) =>{\n  // Loop through each prediction\n  detections.forEach(prediction => {\n\n    // Extract boxes and classes\n    const [x, y, width, height] = prediction['bbox']; \n    const text = prediction['class']; \n\n    // Set styling\n    const color = Math.floor(Math.random()*16777215).toString(16);\n    ctx.strokeStyle = '#' + color\n    ctx.font = '18px Arial';\n\n    // Draw rectangles and text\n    ctx.beginPath();   \n    ctx.fillStyle = '#' + color\n    ctx.fillText(text, x, y);\n    ctx.rect(x, y, width, height); \n    ctx.stroke();\n  });\n}\n","// Import dependencies\nimport React, { useRef, useEffect, useState } from \"react\";\n// eslint-disable-next-line no-unused-vars\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawRect } from \"./utilities\";\nimport { usePlatform } from \"./usePlatform\";\nimport { TailSpin } from \"react-loader-spinner\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const { isMobile } = usePlatform();\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Main function\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Handpose model loaded.\");\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n\n    return true;\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const obj = await net.detect(video);\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runCoco().then((res) => setIsLoading(!res));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const videoConstraints = isMobile\n    ? {\n        facingMode: { exact: \"environment\" },\n      }\n    : {\n        facingMode: \"user\",\n      };\n\n  const webStyle = {\n    position: \"absolute\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    left: 0,\n    right: 0,\n    textAlign: \"center\",\n    zindex: 9,\n    width: 640,\n    height: 480,\n  };\n\n  const mobileStyle = {\n    position: \"absolute\",\n    marginLeft: 0,\n    marginRight: 0,\n    left: 0,\n    right: 0,\n    textAlign: \"center\",\n    zindex: 9,\n    width: window.innerWidth,\n    height: 480,\n  };\n\n  const cameraStyle = isMobile ? mobileStyle : webStyle;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {isLoading ? (\n          <TailSpin\n            height=\"80\"\n            width=\"80\"\n            color=\"#ffff\"\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"1\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        ) : (\n          <Webcam\n            ref={webcamRef}\n            muted={true}\n            videoConstraints={videoConstraints}\n            style={cameraStyle}\n          />\n        )}\n\n        <canvas ref={canvasRef} style={cameraStyle} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nexport const usePlatform = () => {\n  const [isMobile, setIsMobile] = useState(false);\n  const width = window.innerWidth;\n\n  useEffect(() => {\n    if (width < 1400) {\n      setIsMobile(true);\n    } else {\n      setIsMobile(false);\n    }\n  }, [width]);\n\n  return { isMobile };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}